[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "blog",
    "section": "",
    "text": "Customizing Typst\n\n\n\n\n\n\ntypst\n\n\nquarto\n\n\n\nChanging callout block colors and more\n\n\n\n\n\nJan 7, 2025\n\n\nFrank Aragona\n\n\n\n\n\n\n\n\n\n\n\n\nTranslating Quarto (and other markdown files) into Any Language\n\n\n\n\n\n\ntranslation\n\n\nquarto\n\n\n\nTranslating the language of the text, not the programming language!\n\n\n\n\n\nAug 21, 2024\n\n\nFrank Aragona\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nAug 20, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nAug 17, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2025-01-07-typst-colors/index.html",
    "href": "posts/2025-01-07-typst-colors/index.html",
    "title": "Customizing Typst",
    "section": "",
    "text": "original callout\n\n\n\n\n\n\n\n\n\nnew callout\nThis is in reply to a question I saw on bluesky about how to change callout block colors in typst. It’s relatively easy in latex but can be confusing in Typst if you’ve never done it. I have an example file and output that I’ll walk through"
  },
  {
    "objectID": "posts/2025-01-07-typst-colors/index.html#override-quarto-callouts-colors-in-typst",
    "href": "posts/2025-01-07-typst-colors/index.html#override-quarto-callouts-colors-in-typst",
    "title": "Customizing Typst",
    "section": "",
    "text": "original callout\n\n\n\n\n\n\n\n\n\nnew callout"
  },
  {
    "objectID": "posts/2025-01-07-typst-colors/index.html#how-to",
    "href": "posts/2025-01-07-typst-colors/index.html#how-to",
    "title": "Customizing Typst",
    "section": "How to",
    "text": "How to\nTypst in Quarto doesn’t work like latex. Instead of adding simple .tex partials to adjust minor things, you need to adjust .typ files.\n\nStart with the default Quarto typst template with quarto create typst and it will give you\n\na typst-show.typ file. I never edit this\na typst-template.typ file - this is where the customization magic happens\nmake sure you read the comments in the first lines of those files!!!!!\nreference these files in your yaml front matter like so:\n\n\n---\nformat:\n    typst: \n        template-partials:\n        - typst-template.typ\n        - typst-show.typ\n---\n\nif you want custom callout colors, you can change them in the typst-template.typ\n\nit helps to see the raw .typ output to understand where you need to change the color in typst. put keep_typ: true in your front matter:\n\n\n---\nformat:\n    typst: \n        template-partials:\n        - typst-template.typ\n        - typst-show.typ\n        keep-typ: true\n---\n\nnow render your document and look through the output .typ file for the callout block function\nwhen you find the callout block function, copy it and put it in your typst-template. you might need a basic understanding of Typst in order to see where to place the function. Put the function before the #let article function. it will look like this:\n\n#let callout(body: [], title: \"Callout\", background_color: rgb(\"#dddddd\"), icon: none, icon_color: rgb(\"#9cbe5b\")) = {\n  block(\n    breakable: false, \n    fill: rgb(\"#a6c72e\"), // I changed the color here\n    stroke: (paint: icon_color, thickness: 0.5pt, cap: \"round\"), \n    width: 100%, \n    radius: 2pt,\n    block(\n      inset: 1pt,\n      width: 100%, \n      below: 0pt, \n      block(\n        fill: rgb(\"#c03c14\"), \n        width: 100%, \n        inset: 8pt)[#text(icon_color, weight: 900)[#icon] #title]) +\n      if(body != []){\n        block(\n          inset: 1pt, \n          width: 100%, \n          block(fill: white, width: 100%, inset: 8pt, body))\n      }\n    )\n}\n\nNow you can change the fill colors and icon colors to whatever you want by adjusting them in that function.\n\n\nFrom here you can just render the qmd file and it should change the colors."
  },
  {
    "objectID": "posts/2025-01-07-typst-colors/index.html#changing-typst-within-the-qmd",
    "href": "posts/2025-01-07-typst-colors/index.html#changing-typst-within-the-qmd",
    "title": "Customizing Typst",
    "section": "Changing typst within the qmd",
    "text": "Changing typst within the qmd\nYou can also write Typst code inside of the qmd file.\nIf you have some text that you want to decorate, you can surround the text in code like this\n```{=typst}\n    #parameters-here()[ code here\n```\nregular markdown text here\n\n```{=typst}\n    ] //end function bracket here\n```\nHere I’m importing a custom typst library, tweaking some parameters, and wrapping it around regular markdown text:\n```{=typst}\n#import \"@preview/showybox:2.0.1\": showybox\n\n// Second showybox\n#showybox(\n  title-style: (\n    boxed-style: (\n      anchor: (\n        x: center,\n        y: horizon\n      ),\n      radius: (top-left: 10pt, bottom-right: 10pt, rest: 0pt),\n    )\n  ),\n  frame: (\n    title-color: green.darken(40%),\n    body-color: green.lighten(80%),\n    footer-color: green.lighten(60%),\n    border-color: green.darken(60%),\n    radius: (top-left: 10pt, bottom-right: 10pt, rest: 0pt)\n  ),\n  title: \"Key Findings\",\n  footer: text(size: 10pt, weight: 600, emph(\"Please see Situation Updates for COE group updates\"))\n)[\n  \n```\n:::{.content-visible when-format=\"html\"}\n# Key Findings\n:::\n\n-   Current data reflects a mixture of x descendents as the.\\\n-   Globally no other x with unusual characteristics have been identified as having unusual growth.\n-   Some other point\n\n```{=typst}\n    ]\n```\nand it gives this as a result:"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/2024-08-21-translate-md-files/index.html#md-parse",
    "href": "posts/2024-08-21-translate-md-files/index.html#md-parse",
    "title": "Translating Quarto (and other markdown files) into Any Language",
    "section": "md parse",
    "text": "md parse\nThe lightparser package is fantastic (and light!). It will take the qmd or rmd and return a tibble of its elements.\n\n(parsed &lt;- lightparser::split_to_tbl('_english.qmd'))\n\nIt seems you are currently knitting a Rmd/Qmd file. The parsing of the file will be done in a new R session.\n\n\n# A tibble: 8 × 8\n  type    label           params       text  code  heading heading_level section\n  &lt;chr&gt;   &lt;chr&gt;           &lt;list&gt;       &lt;nam&gt; &lt;lis&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;chr&gt;  \n1 yaml    &lt;NA&gt;            &lt;named list&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;NA&gt;               NA &lt;NA&gt;   \n2 inline  &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; &lt;NA&gt;               NA &lt;NA&gt;   \n3 heading &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; Quarto              1 Quarto \n4 inline  &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; &lt;NA&gt;               NA Quarto \n5 heading &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; Automa…             1 Automa…\n6 inline  &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; &lt;NA&gt;               NA Automa…\n7 block   unnamed-chunk-1 &lt;named list&gt; &lt;lgl&gt; &lt;chr&gt; &lt;NA&gt;               NA Automa…\n8 inline  &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; &lt;NA&gt;               NA Automa…"
  },
  {
    "objectID": "posts/2024-08-21-translate-md-files/index.html#md-translate",
    "href": "posts/2024-08-21-translate-md-files/index.html#md-translate",
    "title": "Translating Quarto (and other markdown files) into Any Language",
    "section": "md translate",
    "text": "md translate\nunnest the text and apply the translate function\n\n\nparsed_es &lt;- parsed |&gt;\n  tidyr::unnest(cols = text) |&gt;\n  dplyr::mutate(text_es = \n    purrr::map(text,translatemd::translate)\n  )\n\n\nlet’s see what it looks like.\nparsed_es |&gt;\n  tidyr::unnest(cols = text_es) |&gt;\n  dplyr::select(type,text) |&gt;\n  head()\nparsed_es |&gt;\n  tidyr::unnest(cols = text_es) |&gt;\n  dplyr::select(type,text_es) |&gt;\n  head()\n\n\n\n# A tibble: 6 × 2\n  type    text                                                                  \n  &lt;chr&gt;   &lt;chr&gt;                                                                 \n1 heading # Quarto                                                              \n2 inline  Quarto enables you to weave together content and executable code into…\n3 inline  To create the release cycle in your repo you may want to use Conventi…\n4 inline  Conventional Commits are a way to format and standardize your commit …\n5 inline  -   The word `feat:` can trigger a Github Action to add that commit t…\n6 inline  -   and it will up-version the minor release version number.          \n\n\n# A tibble: 6 × 2\n  type    text_es                                                               \n  &lt;chr&gt;   &lt;chr&gt;                                                                 \n1 heading # Quarto                                                              \n2 inline  Quarto le permite entretejer el contenido y el código ejecutable en u…\n3 inline  Para crear el ciclo de lanzamiento en su repo es posible que desee ut…\n4 inline  Commits convencionales son una forma de formatear y estandarizar sus …\n5 inline  - La palabra `feat:` puede activar una acción de Github para añadir q…\n6 inline  - y subirá el número de versión de lanzamiento menor."
  },
  {
    "objectID": "posts/2024-08-21-translate-md-files/index.html#write-to-new-qmd",
    "href": "posts/2024-08-21-translate-md-files/index.html#write-to-new-qmd",
    "title": "Translating Quarto (and other markdown files) into Any Language",
    "section": "write to new qmd",
    "text": "write to new qmd\nclean up and write to new\n\n\nparsed_es_to_qmd &lt;- parsed_es |&gt;\n  dplyr::select(-text) |&gt;\n  dplyr::rename(text = text_es)\n\n# output to qmd\nlightparser::combine_tbl_to_file(\n  parsed_es_to_qmd,\n  \"_spanish.qmd\"\n)"
  }
]