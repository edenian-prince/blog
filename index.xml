<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>edenian blog</title>
<link>https://github.com/edenian-prince/blog/</link>
<atom:link href="https://github.com/edenian-prince/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>thoughts, programming, movies, books</description>
<generator>quarto-1.7.32</generator>
<lastBuildDate>Mon, 20 Oct 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>28 Years Later: movie review</title>
  <dc:creator>Frank Aragona</dc:creator>
  <link>https://github.com/edenian-prince/blog/posts/2025-10-20-28-years-later/</link>
  <description><![CDATA[ 

<script src="../../assets/navbar_cells.js"></script>





<p><img src="https://github.com/edenian-prince/blog/posts/2025-10-20-28-years-later/images/pals.gif" class="img-fluid"></p>
<div class="box">
<p><strong>TL;DR</strong></p>
<ul>
<li>Jimmy didn’t leave the power ranger behind, he became it.</li>
</ul>
</div>
<p>If you watched this movie, you know that the ending is divisive. Either love it or hate it. I’ve been watching a lot of analyses on Jimmy’s character and I think a lot of them completely miss the point.</p>
<p>Spike’s journey has two parts; 1) he learns about death/life, and 2) what it means to be a man. The characters in the movie offer their perspectives to teach him about the two topics: His father has a somewhat toxic perspective of what makes someone a man — he kills without emotion, he says the infected are soulless, he isolates from his wife, cheats, drinks his emotions away, and copes. He is the one that labels the muscular, bid dick infected as “alphas”. Contrarily, when we meet the doctor, we see a healthy take on what it is to be human. He doesn’t think the infected are soulless, he doesn’t shy away from death (specifically with Isla, unlike Jaime), and he doesn’t call them ‘alpha’. He treats them like they’re living beings, as they are.</p>
<p>All of this shows Spike what life and death are, and that his community is actually a toxic and a regressed society. He would rather live than waste away in a toxic community, like what Dr.&nbsp;Kelson taught him.</p>
<p>Now jump to the ending. Jimmy shows up and it feels like we’re thrown into a completely different movie, pissing off a lot of viewers. But Jimmy is essential to the point of the film. Jimmy drives all of the lessons home.</p>
<p>In the beginning, Spike doesn’t pack his power ranger toy because it’s not what the society would label as ‘manly’. He thinks bringing it would be too boyish and immature. Jimmy contrasts that by showing that not only did he ‘pack the power ranger’, he metaphorically became one. This is where analyses break down and say “he never grew up, he’s still a child” or “this is how he copes” but I don’t buy either of them.</p>
<p>The whole movie presented us these toxic and traumatic perceptions of what it means to be an ‘alpha’ and shows us that it’s important to face death, cherish life, and stay true to who you are.</p>
<p>And Jimmy embodies the message. His appearance doesn’t make him less of a man. He obliterates the perception of what is ‘alpha’ and what it is to be a man (and really, obliterates gender norms. He’s wearing a tiara on purpose..). Jimmy doesn’t follow what his dad taught him (symbolized by the upside down cross), and he faces death head on. Jaime is not an ‘alpha’, whatever that means. He feeds us a bullshit view about masculinity but deep down he cannot face death or cherish life. Not only does Jimmy face death, but he clearly lives life to its fullest.</p>
<p><strong>Jimmy is not coping; the film critics are.</strong></p>



 ]]></description>
  <category>reviews</category>
  <category>movies</category>
  <guid>https://github.com/edenian-prince/blog/posts/2025-10-20-28-years-later/</guid>
  <pubDate>Mon, 20 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://github.com/edenian-prince/blog/posts/2025-10-20-28-years-later/images/pals.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Customizing Typst</title>
  <dc:creator>Frank Aragona</dc:creator>
  <link>https://github.com/edenian-prince/blog/posts/2025-01-07-typst-colors/</link>
  <description><![CDATA[ 

<script src="../../assets/navbar_cells.js"></script>





<section id="override-quarto-callouts-colors-in-typst" class="level2 splash-page">
<h2 class="anchored" data-anchor-id="override-quarto-callouts-colors-in-typst">Override quarto callouts colors in typst</h2>
<div class="columns">
<div class="column" style="width:50%;">
<section id="go-from-this" class="level3">
<h3 class="anchored" data-anchor-id="go-from-this">Go from this</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://github.com/edenian-prince/blog/posts/2025-01-07-typst-colors/og_callout.png" class="img-fluid figure-img"></p>
<figcaption>original callout</figcaption>
</figure>
</div>
</section>
</div><div class="column" style="width:50%;">
<section id="to-this-in-typst" class="level3">
<h3 class="anchored" data-anchor-id="to-this-in-typst">To this, in typst</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://github.com/edenian-prince/blog/posts/2025-01-07-typst-colors/new_callout.png" class="img-fluid figure-img"></p>
<figcaption>new callout</figcaption>
</figure>
</div>
</section>
</div>
</div>
</section>
<p>This is in reply to a question I saw on bluesky about how to change callout block colors in typst. It’s relatively easy in latex but can be confusing in Typst if you’ve never done it. <strong>I have an example file and output that I’ll walk through</strong></p>
<ul>
<li><a href="https://github.com/edenian-prince/blog/blob/main/posts/2025-01-07-typst-colors/_colors.qmd">example file link</a></li>
<li><a href="https://github.com/edenian-prince/blog/blob/main/posts/2025-01-07-typst-colors/_colors.pdf">example output link</a></li>
<li><a href="https://github.com/edenian-prince/blog/blob/main/posts/2025-01-07-typst-colors/typst-template.typ">example <code>typst-template.typ</code></a></li>
</ul>
<section id="how-to" class="level2">
<h2 class="anchored" data-anchor-id="how-to">How to</h2>
<p>Typst in Quarto doesn’t work like latex. Instead of adding simple .tex partials to adjust minor things, you need to adjust .typ files.</p>
<ol type="1">
<li>Start with the default Quarto typst template with <code>quarto create typst</code> and it will give you
<ul>
<li>a <code>typst-show.typ</code> file. I never edit this</li>
<li>a <code>typst-template.typ</code> file - this is where the customization magic happens</li>
<li><strong>make sure you read the comments in the first lines of those files!!!!!</strong></li>
<li>reference these files in your yaml front matter like so:</li>
</ul></li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typst</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">template-partials</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> typst-template.typ</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> typst-show.typ</span></span>
<span id="cb1-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<ol start="2" type="1">
<li>if you want custom callout colors, you can change them in the <code>typst-template.typ</code>
<ul>
<li>it helps to see the raw .typ output to understand where you need to change the color in typst. put <code>keep_typ: true</code> in your front matter:</li>
</ul></li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typst</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">template-partials</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> typst-template.typ</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> typst-show.typ</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keep-typ</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb2-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<ol start="4" type="1">
<li><p>now render your document and look through the output <code>.typ</code> file for the callout block function</p></li>
<li><p>when you find the callout block function, copy it and put it in your typst-template. you might need a basic understanding of Typst in order to see where to place the function. <strong>Put the function before the <code>#let article</code> function</strong>. it will look like this:</p></li>
</ol>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb3-1">#let callout(body<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Callout"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> background_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> rgb(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#dddddd"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> icon<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> none<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> icon_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> rgb(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#9cbe5b"</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-2">  block(</span>
<span id="cb3-3">    breakable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb3-4">    fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> rgb(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#a6c72e"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// I changed the color here</span></span>
<span id="cb3-5">    stroke<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> (paint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> icon_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> thickness<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>5pt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb3-6">    width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%,</span> </span>
<span id="cb3-7">    radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 2pt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-8">    block(</span>
<span id="cb3-9">      inset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 1pt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-10">      width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%,</span> </span>
<span id="cb3-11">      below<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 0pt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb3-12">      block(</span>
<span id="cb3-13">        fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> rgb(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#c03c14"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb3-14">        width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%,</span> </span>
<span id="cb3-15">        inset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 8pt)[#text(icon_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">900</span>)[#icon] #title]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-16">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> [])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-17">        block(</span>
<span id="cb3-18">          inset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 1pt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb3-19">          width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%,</span> </span>
<span id="cb3-20">          block(fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> white<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%,</span> inset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 8pt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> body))</span>
<span id="cb3-21">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-22">    )</span>
<span id="cb3-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<ol start="5" type="1">
<li>Now you can change the fill colors and icon colors to whatever you want by adjusting them in that function.</li>
</ol>
<p><br></p>
<p>From here you can just render the qmd file and it should change the colors.</p>
</section>
<section id="changing-typst-within-the-qmd" class="level2">
<h2 class="anchored" data-anchor-id="changing-typst-within-the-qmd">Changing typst within the qmd</h2>
<p>You can also write Typst code inside of the qmd file.</p>
<p>If you have some text that you want to decorate, you can surround the text in code like this</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb4-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{=typst}</span></span>
<span id="cb4-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    #parameters-here()[ code here</span></span>
<span id="cb4-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb4-4">regular markdown text here</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{=typst}</span></span>
<span id="cb4-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    ] //end function bracket here</span></span>
<span id="cb4-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<p>Here I’m importing a custom typst library, tweaking some parameters, and wrapping it around regular markdown text:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb5-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{=typst}</span></span>
<span id="cb5-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import "@preview/showybox:2.0.1": showybox</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Second showybox</span></span>
<span id="cb5-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#showybox(</span></span>
<span id="cb5-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  title-style: (</span></span>
<span id="cb5-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    boxed-style: (</span></span>
<span id="cb5-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      anchor: (</span></span>
<span id="cb5-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        x: center,</span></span>
<span id="cb5-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        y: horizon</span></span>
<span id="cb5-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      ),</span></span>
<span id="cb5-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      radius: (top-left: 10pt, bottom-right: 10pt, rest: 0pt),</span></span>
<span id="cb5-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    )</span></span>
<span id="cb5-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ),</span></span>
<span id="cb5-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  frame: (</span></span>
<span id="cb5-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    title-color: green.darken(40%),</span></span>
<span id="cb5-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    body-color: green.lighten(80%),</span></span>
<span id="cb5-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    footer-color: green.lighten(60%),</span></span>
<span id="cb5-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    border-color: green.darken(60%),</span></span>
<span id="cb5-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    radius: (top-left: 10pt, bottom-right: 10pt, rest: 0pt)</span></span>
<span id="cb5-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  ),</span></span>
<span id="cb5-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  title: "Key Findings",</span></span>
<span id="cb5-23"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  footer: text(size: 10pt, weight: 600, emph("Please see Situation Updates for COE group updates"))</span></span>
<span id="cb5-24"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)[</span></span>
<span id="cb5-25"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb5-26"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb5-27">:::{.content-visible when-format="html"}</span>
<span id="cb5-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Key Findings</span></span>
<span id="cb5-29">:::</span>
<span id="cb5-30"></span>
<span id="cb5-31"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-   </span>Current data reflects a mixture of x descendents as the.\</span>
<span id="cb5-32"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-   </span>Globally no other x with unusual characteristics have been identified as having unusual growth.</span>
<span id="cb5-33"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-   </span>Some other point</span>
<span id="cb5-34"></span>
<span id="cb5-35"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{=typst}</span></span>
<span id="cb5-36"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    ]</span></span>
<span id="cb5-37"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<p>and it gives this as a result:</p>
<p><img src="https://github.com/edenian-prince/blog/posts/2025-01-07-typst-colors/box.png" class="img-fluid"></p>


</section>

 ]]></description>
  <category>typst</category>
  <category>quarto</category>
  <guid>https://github.com/edenian-prince/blog/posts/2025-01-07-typst-colors/</guid>
  <pubDate>Tue, 07 Jan 2025 00:00:00 GMT</pubDate>
  <media:content url="https://github.com/edenian-prince/blog/posts/2025-01-07-typst-colors/PST-Blog-Typst.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Translating Quarto (and other markdown files) into Any Language</title>
  <dc:creator>Frank Aragona</dc:creator>
  <link>https://github.com/edenian-prince/blog/posts/2024-08-21-translate-md-files/</link>
  <description><![CDATA[ 

<script src="../../assets/navbar_cells.js"></script>





<div class="cell">
<style type="text/css">
// Output colors
.watch {
  background-color: lightpurple;
  border: 3px solid purple;
  font-weight: bold;
}
</style>
</div>
<section id="multilingual-quarto" class="level1">
<h1>Multilingual Quarto</h1>
<p>I made a simple workflow for translating the text of a qmd file (or really any md file) into a new language. I’ll use English to Spanish as an example.</p>
</section>
<section id="hugging-face-transformers" class="level1">
<h1>🤗 Hugging Face Transformers</h1>
<p>The first step is to find a model that can translate into whatever language we want. I looked into a few different apis (like Google, DeepL), but they all required a credit card on file (even free versions), an api token, and they all have a tier approach where you can only make so many api calls.</p>
<p>I wanted to <strong>simplfy everything</strong> and avoid putting my credit card into any browser. Queue <strong><a href="https://huggingface.co/docs/transformers/en/index">Hugging Face Transformers</a></strong></p>
<blockquote class="blockquote">
<p>Transformers provides APIs and tools to easily download and train state-of-the-art pretrained models. Using pretrained models can reduce your compute costs, carbon footprint, and save you the time and resources required to train a model from scratch. These models support common tasks in different modalities, such as:</p>
</blockquote>
<blockquote class="blockquote">
<p>📝 Natural Language Processing: text classification, named entity recognition, question answering, language modeling, summarization, translation, multiple choice, and text generation. 🖼️ Computer Vision: image classification, object detection, and segmentation. 🗣️ Audio: automatic speech recognition and audio classification. 🐙 Multimodal: table question answering, optical character recognition, information extraction from scanned documents, video classification, and visual question answering.</p>
</blockquote>
</section>
<section id="code-to-use-transformers" class="level1">
<h1>Code to use Transformers</h1>
<p>There is an <a href="https://github.com/farach/huggingfaceR">R library for hugging face</a>, but I think it requires conda to install some python libraries and I had conda issues, so I just made a <a href="https://github.com/edenian-prince/translatemd">more simple package</a> that uses pip to install the python dependencies. And this package is really only for translation and for this demo.</p>
<p>I originally did all of this in Python, but decided to convert everything I could into R because parsing an md file is surprisingly (or unsurprisingly?) way more straightforward in R, and that’s where the real magic happens.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">install</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">select language</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">translate</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<ul>
<li>first install reticulate,</li>
<li>then the package</li>
<li>and then you need to install the python dependencies</li>
</ul>
<p>reticulate:</p>
<div class="smallframe">
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># you need reticulate to use the python code</span></span>
<span id="cb1-2">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reticulate'</span>)</span></code></pre></div>
</div>
</div>
<p>package:</p>
<div class="medframe">
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install my package</span></span>
<span id="cb2-2">remotes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'edenian-prince/translatemd'</span>)</span></code></pre></div>
</div>
</div>
<p>python dependencies:</p>
<p>This will install a separated virtual environment called <code>r-transformers</code> but you can rename it and specify the location of the venv if you want. It will then pip install <code>torch</code>, <code>transformers</code> and <code>sentencepiece</code></p>
<div class="medframe">
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">translatemd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_transformers</span>()</span></code></pre></div>
</div>
</div>
<p>Getting started, this video helped a ton!</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/feA-H6blwr4" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>Here you need to find a <a href="https://huggingface.co/models?pipeline_tag=translation&amp;sort=trending">NLP translation model</a> from Hugging Face. I recommend the <a href="https://huggingface.co/models?pipeline_tag=translation&amp;sort=trending&amp;search=helsinki">Helsinki models</a></p>
<p>When you find a model you want, copy the entire model name and paste it as a string into the function below, like this for the spanish model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">translator <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> translatemd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select_lang</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Helsinki-NLP/opus-mt-en-es"</span>)</span></code></pre></div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Note that the models are written like <em>from xx to yy</em> so in this case it’s <em>en-es</em> which is <em>english to spanish</em></p>
</div>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<p>You can input text in the translate function and it will translate english to spanish:</p>
<div class="medframe">
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">translatemd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">translate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hello, my name is Frank'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre class="watch"><code>[1] "Hola, mi nombre es Frank."</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="translate-an-entire-qmd-file" class="level1 page-columns page-full">
<h1>Translate an Entire QMD File</h1>
<ul>
<li>Parse the QMD</li>
<li>Apply the translate function to the text</li>
<li>Re-write the translated QMD into a new document</li>
</ul>
<section id="md-parse" class="level2">
<h2 class="anchored" data-anchor-id="md-parse">md parse</h2>
<p>The <code>lightparser</code> package is fantastic (and light!). It will take the qmd or rmd and return a tibble of its elements.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">(parsed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lightparser<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">split_to_tbl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_english.qmd'</span>))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>It seems you are currently knitting a Rmd/Qmd file. The parsing of the file will be done in a new R session.</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre class="watch"><code># A tibble: 8 × 8
  type    label           params       text  code  heading heading_level section
  &lt;chr&gt;   &lt;chr&gt;           &lt;list&gt;       &lt;nam&gt; &lt;lis&gt; &lt;chr&gt;           &lt;dbl&gt; &lt;chr&gt;  
1 yaml    &lt;NA&gt;            &lt;named list&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;NA&gt;               NA &lt;NA&gt;   
2 inline  &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; &lt;NA&gt;               NA &lt;NA&gt;   
3 heading &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; Quarto              1 Quarto 
4 inline  &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; &lt;NA&gt;               NA Quarto 
5 heading &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; Automa…             1 Automa…
6 inline  &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; &lt;NA&gt;               NA Automa…
7 block   unnamed-chunk-1 &lt;named list&gt; &lt;lgl&gt; &lt;chr&gt; &lt;NA&gt;               NA Automa…
8 inline  &lt;NA&gt;            &lt;lgl [1]&gt;    &lt;chr&gt; &lt;lgl&gt; &lt;NA&gt;               NA Automa…</code></pre>
</div>
</div>
</section>
<section id="md-translate" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="md-translate">md translate</h2>
<p>unnest the text and apply the translate function</p>
<div class="medframe">
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">parsed_es <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parsed <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-2">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb10-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text_es =</span> </span>
<span id="cb10-4">    purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(text,translatemd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>translate)</span>
<span id="cb10-5">  )</span></code></pre></div>
</div>
</div>
<p>let’s see what it looks like.</p>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">parsed_es <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-2">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> text_es) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(type,text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span>
<span id="cb11-5">parsed_es <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-6">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> text_es) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-7">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(type,text_es) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell column-screen-inset-shaded quarto-layout-panel" data-layout-nrow="1">
<div class="quarto-layout-row">
<div class="cell-output cell-output-stdout quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<pre><code># A tibble: 6 × 2
  type    text                                                                  
  &lt;chr&gt;   &lt;chr&gt;                                                                 
1 heading # Quarto                                                              
2 inline  Quarto enables you to weave together content and executable code into…
3 inline  To create the release cycle in your repo you may want to use Conventi…
4 inline  Conventional Commits are a way to format and standardize your commit …
5 inline  -   The word `feat:` can trigger a Github Action to add that commit t…
6 inline  -   and it will up-version the minor release version number.          </code></pre>
</div>
<div class="cell-output cell-output-stdout quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<pre><code># A tibble: 6 × 2
  type    text_es                                                               
  &lt;chr&gt;   &lt;chr&gt;                                                                 
1 heading # Quarto                                                              
2 inline  Quarto le permite entretejer el contenido y el código ejecutable en u…
3 inline  Para crear el ciclo de lanzamiento en su repo es posible que desee ut…
4 inline  Commits convencionales son una forma de formatear y estandarizar sus …
5 inline  - La palabra `feat:` puede activar una acción de Github para añadir q…
6 inline  - y subirá el número de versión de lanzamiento menor.                 </code></pre>
</div>
</div>
</div>
</section>
<section id="write-to-new-qmd" class="level2">
<h2 class="anchored" data-anchor-id="write-to-new-qmd">write to new qmd</h2>
<p>clean up and write to new</p>
<div class="medframe">
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">parsed_es_to_qmd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parsed_es <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> text_es)</span>
<span id="cb14-4"></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output to qmd</span></span>
<span id="cb14-6">lightparser<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">combine_tbl_to_file</span>(</span>
<span id="cb14-7">  parsed_es_to_qmd,</span>
<span id="cb14-8">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_spanish.qmd"</span></span>
<span id="cb14-9">)</span></code></pre></div>
</div>
</div>
</section>
</section>
<section id="results" class="level1 page-columns page-full">
<h1>Results</h1>
<p>And now you have a document in English and another in Spanish</p>
<div class="column-screen-inset-shaded quarto-layout-panel" data-layout-nrow="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://github.com/edenian-prince/blog/posts/2024-08-21-translate-md-files/images/english.png" class="myframe img-fluid"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://github.com/edenian-prince/blog/posts/2024-08-21-translate-md-files/images/spanish.png" class="myframe img-fluid"></p>
</div>
</div>
</div>
</section>
<section id="bugs" class="level1">
<h1>Bugs</h1>
<p>I’ve caught a few bugs to this approach and you maybe even noticed some!</p>
<ol type="1">
<li>A <code>#</code> got removed in the translate - look at the section called <code>Automating the Release Cycle</code>. Since the <code>#</code> got removed it is no longer a header ☹️</li>
<li>The <code>lightparser</code> package has <a href="https://github.com/ThinkR-open/lightparser/issues/13">a reported bug</a> with quarto chunk yaml parameters. Here it converted <code>#| eval: false</code> into <code>#| eval: no</code>, but we know that the <code>#| eval: false</code> should not be treated as text. Hopefully this is fixed</li>
</ol>
<p>I recommend going through the document and looking for bugs like these! Some manual edits to the translated qmd file may be necessary.</p>
</section>
<section id="full-script-example" class="level1">
<h1>Full Script Example</h1>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>translate.R</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install</span></span>
<span id="cb15-2">translatemd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_transformers</span>()</span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># select language</span></span>
<span id="cb15-5">translator <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> translatemd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select_lang</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Helsinki-NLP/opus-mt-en-es"</span>)</span>
<span id="cb15-6"></span>
<span id="cb15-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># parse your qmd</span></span>
<span id="cb15-8">(parsed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lightparser<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">split_to_tbl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'english.qmd'</span>))</span>
<span id="cb15-9"></span>
<span id="cb15-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># translate the qmd</span></span>
<span id="cb15-11">parsed_es <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parsed <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-12">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-13">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text_es =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(text,translatemd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>translate))</span>
<span id="cb15-14"></span>
<span id="cb15-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write to a new qmd</span></span>
<span id="cb15-16">parsed_es_to_qmd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parsed_es <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-17">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-18">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> text_es)</span>
<span id="cb15-19"></span>
<span id="cb15-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output to qmd</span></span>
<span id="cb15-21">lightparser<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">combine_tbl_to_file</span>(</span>
<span id="cb15-22">  parsed_es_to_qmd,</span>
<span id="cb15-23">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_spanish.qmd"</span></span>
<span id="cb15-24">)</span></code></pre></div>
</div>
</div>


</section>

 ]]></description>
  <category>translation</category>
  <category>quarto</category>
  <guid>https://github.com/edenian-prince/blog/posts/2024-08-21-translate-md-files/</guid>
  <pubDate>Wed, 21 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://github.com/edenian-prince/blog/posts/2024-08-21-translate-md-files/images/blog-hugging-face.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>Post With Code</title>
  <dc:creator>Harlow Malloc</dc:creator>
  <link>https://github.com/edenian-prince/blog/posts/post-with-code/</link>
  <description><![CDATA[ 

<script src="../../assets/navbar_cells.js"></script>





<p>This is a post with executable code.</p>



 ]]></description>
  <category>news</category>
  <category>code</category>
  <category>analysis</category>
  <guid>https://github.com/edenian-prince/blog/posts/post-with-code/</guid>
  <pubDate>Tue, 20 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://github.com/edenian-prince/blog/posts/post-with-code/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Welcome To My Blog</title>
  <dc:creator>Tristan O&#39;Malley</dc:creator>
  <link>https://github.com/edenian-prince/blog/posts/welcome/</link>
  <description><![CDATA[ 

<script src="../../assets/navbar_cells.js"></script>





<p>This is the first post in a Quarto blog. Welcome!</p>
<p><img src="https://github.com/edenian-prince/blog/posts/welcome/thumbnail.jpg" class="img-fluid"></p>
<p>Since this post doesn’t specify an explicit <code>image</code>, the first image in the post will be used in the listing page of posts.</p>



 ]]></description>
  <category>news</category>
  <guid>https://github.com/edenian-prince/blog/posts/welcome/</guid>
  <pubDate>Sat, 17 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://github.com/edenian-prince/blog/posts/2025-01-13-scrollyd3/</link>
  <description><![CDATA[ 
      <!-- user-provided yaml closeread style options -->
      <style>
        :root {
          --cr-section-background-color: #f6f9fc;
--cr-narrative-text-color-sidebar: #fdfdfd;
--cr-narrative-background-color-sidebar: #021525;
        }
      </style>
    




<div class="cr-section cr-column-screen sidebar-left">
<div class="narrative-col">
<div class="trigger new-trigger" data-focus-on="cr-title">
<section id="closeread-ojs-d3.js-interaction" class="level2 narrative">
<h2 class="anchored" data-anchor-id="closeread-ojs-d3.js-interaction">Closeread OJS D3.js Interaction <img src="https://github.com/edenian-prince/blog/posts/2025-01-13-scrollyd3/images/water-wave.png" class="img-fluid" style="position: relative; top: -2.5px;" width="40"></h2>
<p>frank aragona</p>
</section>
</div>
</div>
<div class="sticky-col">
<div class="sticky-col-stack">
<div id="cr-title" class="sticky">
<section id="overview" class="level2 splash-page">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<ul>
<li>How to use closeread with Observable JS</li>
<li>How to make cool interactive plots when the user scrolls</li>
<li>An intro to D3.js</li>
</ul>
</section>
</div>
</div>
</div>
</div>
<div class="cr-section cr-column-screen sidebar-left">
<div class="narrative-col">
<div class="progress-block">
<div class="trigger new-trigger" data-focus-on="cr-ploty">
<div class="narrative">
<p>Here’s the main plot, scroll down.</p>
</div>
</div>
<div class="trigger new-trigger" data-focus-on="cr-ploty">
<div class="narrative">
<div class="cell">
<div class="cell-output-display">
<div id="klifzfjzhc" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
#klifzfjzhc table {
  font-family: 'JetBrains Mono', system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#klifzfjzhc thead, #klifzfjzhc tbody, #klifzfjzhc tfoot, #klifzfjzhc tr, #klifzfjzhc td, #klifzfjzhc th {
  border-style: none;
}

#klifzfjzhc p {
  margin: 0;
  padding: 0;
}

#klifzfjzhc .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #000000;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #000000;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#klifzfjzhc .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#klifzfjzhc .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#klifzfjzhc .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#klifzfjzhc .gt_heading {
  background-color: #FFFFFF;
  text-align: left;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#klifzfjzhc .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#klifzfjzhc .gt_col_headings {
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: #000000;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#klifzfjzhc .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#klifzfjzhc .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#klifzfjzhc .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#klifzfjzhc .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#klifzfjzhc .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#klifzfjzhc .gt_spanner_row {
  border-bottom-style: hidden;
}

#klifzfjzhc .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#klifzfjzhc .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#klifzfjzhc .gt_from_md > :first-child {
  margin-top: 0;
}

#klifzfjzhc .gt_from_md > :last-child {
  margin-bottom: 0;
}

#klifzfjzhc .gt_row {
  padding-top: 3px;
  padding-bottom: 3px;
  padding-left: 10px;
  padding-right: 10px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#klifzfjzhc .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 10px;
  padding-right: 10px;
}

#klifzfjzhc .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#klifzfjzhc .gt_row_group_first td {
  border-top-width: 2px;
}

#klifzfjzhc .gt_row_group_first th {
  border-top-width: 2px;
}

#klifzfjzhc .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#klifzfjzhc .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#klifzfjzhc .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#klifzfjzhc .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#klifzfjzhc .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#klifzfjzhc .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#klifzfjzhc .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#klifzfjzhc .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#klifzfjzhc .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#klifzfjzhc .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#klifzfjzhc .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#klifzfjzhc .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#klifzfjzhc .gt_sourcenote {
  font-size: 12px;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#klifzfjzhc .gt_left {
  text-align: left;
}

#klifzfjzhc .gt_center {
  text-align: center;
}

#klifzfjzhc .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#klifzfjzhc .gt_font_normal {
  font-weight: normal;
}

#klifzfjzhc .gt_font_bold {
  font-weight: bold;
}

#klifzfjzhc .gt_font_italic {
  font-style: italic;
}

#klifzfjzhc .gt_super {
  font-size: 65%;
}

#klifzfjzhc .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#klifzfjzhc .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#klifzfjzhc .gt_indent_1 {
  text-indent: 5px;
}

#klifzfjzhc .gt_indent_2 {
  text-indent: 10px;
}

#klifzfjzhc .gt_indent_3 {
  text-indent: 15px;
}

#klifzfjzhc .gt_indent_4 {
  text-indent: 20px;
}

#klifzfjzhc .gt_indent_5 {
  text-indent: 25px;
}

#klifzfjzhc .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#klifzfjzhc div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="gt_col_headings header">
<th id="language" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: black" scope="col">Top Language</th>
<th id="n" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: black" scope="col">Count</th>
<th id="x_scaled" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: black" scope="col">Percent of Total</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="language">R</td>
<td class="gt_row gt_right" headers="n">149</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:46.7084639498433%;height:16px;display:flex;align-items:center;justify-content:flex-start;position:relative;">
<span style="color:#000000;position:absolute;left:0px;margin-left:5px;font-weight:bold;font-size:12px;">46.7%</span>
</div>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="language">Python</td>
<td class="gt_row gt_right" headers="n">73</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:22.884012539185%;height:16px;display:flex;align-items:center;justify-content:flex-start;position:relative;">
<span style="color:#000000;position:absolute;left:0px;margin-left:5px;font-weight:bold;font-size:12px;">22.9%</span>
</div>
</div></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="language">null</td>
<td class="gt_row gt_right" headers="n">42</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:13.166144200627%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:13.166144200627px;font-weight:bold;font-size:12px;">13.2%</span>
</div>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="language">Jupyter Notebook</td>
<td class="gt_row gt_right" headers="n">18</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:5.64263322884013%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:5.64263322884012px;font-weight:bold;font-size:12px;">5.6%</span>
</div>
</div></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="language">SAS</td>
<td class="gt_row gt_right" headers="n">8</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:2.50783699059561%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:2.50783699059561px;font-weight:bold;font-size:12px;">2.5%</span>
</div>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="language">TSQL</td>
<td class="gt_row gt_right" headers="n">7</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:2.19435736677116%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:2.19435736677116px;font-weight:bold;font-size:12px;">2.2%</span>
</div>
</div></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="language">Batchfile</td>
<td class="gt_row gt_right" headers="n">6</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:1.88087774294671%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:1.88087774294671px;font-weight:bold;font-size:12px;">1.9%</span>
</div>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="language">TeX</td>
<td class="gt_row gt_right" headers="n">5</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:1.56739811912226%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:1.56739811912226px;font-weight:bold;font-size:12px;">1.6%</span>
</div>
</div></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="language">HTML</td>
<td class="gt_row gt_right" headers="n">4</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:1.25391849529781%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:1.25391849529781px;font-weight:bold;font-size:12px;">1.3%</span>
</div>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="language">Dockerfile</td>
<td class="gt_row gt_right" headers="n">1</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:0.313479623824451%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:0.313479623824451px;font-weight:bold;font-size:12px;">0.3%</span>
</div>
</div></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="language">Java</td>
<td class="gt_row gt_right" headers="n">1</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:0.313479623824451%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:0.313479623824451px;font-weight:bold;font-size:12px;">0.3%</span>
</div>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="language">JavaScript</td>
<td class="gt_row gt_right" headers="n">1</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:0.313479623824451%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:0.313479623824451px;font-weight:bold;font-size:12px;">0.3%</span>
</div>
</div></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="language">Rebol</td>
<td class="gt_row gt_right" headers="n">1</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:0.313479623824451%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:0.313479623824451px;font-weight:bold;font-size:12px;">0.3%</span>
</div>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="language">Roff</td>
<td class="gt_row gt_right" headers="n">1</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:0.313479623824451%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:0.313479623824451px;font-weight:bold;font-size:12px;">0.3%</span>
</div>
</div></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="language">Rust</td>
<td class="gt_row gt_right" headers="n">1</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:0.313479623824451%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:0.313479623824451px;font-weight:bold;font-size:12px;">0.3%</span>
</div>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="language">Shell</td>
<td class="gt_row gt_right" headers="n">1</td>
<td class="gt_row gt_left" headers="x_scaled"><div style="flex-grow:1;margin-left:8px;background:#e1e1e1;">
<div style="background:#48c8df;width:0.313479623824451%;height:16px;display:flex;align-items:center;justify-content:center;color:#000000;font-weight:bold;font-size:12px;position:relative;">
<span style="color:#000000;position:absolute;left:0%;margin-left:0.313479623824451px;font-weight:bold;font-size:12px;">0.3%</span>
</div>
</div></td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</div>
<div class="trigger new-trigger" data-focus-on="cr-ploty">
<div class="narrative">
<div class="cell">
<div class="cell-output-display">
<div id="ahizlnbgau" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
#ahizlnbgau table {
  font-family: 'JetBrains Mono', system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#ahizlnbgau thead, #ahizlnbgau tbody, #ahizlnbgau tfoot, #ahizlnbgau tr, #ahizlnbgau td, #ahizlnbgau th {
  border-style: none;
}

#ahizlnbgau p {
  margin: 0;
  padding: 0;
}

#ahizlnbgau .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #000000;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #000000;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ahizlnbgau .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#ahizlnbgau .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ahizlnbgau .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ahizlnbgau .gt_heading {
  background-color: #FFFFFF;
  text-align: left;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ahizlnbgau .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ahizlnbgau .gt_col_headings {
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: #000000;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ahizlnbgau .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ahizlnbgau .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ahizlnbgau .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ahizlnbgau .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ahizlnbgau .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ahizlnbgau .gt_spanner_row {
  border-bottom-style: hidden;
}

#ahizlnbgau .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#ahizlnbgau .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ahizlnbgau .gt_from_md > :first-child {
  margin-top: 0;
}

#ahizlnbgau .gt_from_md > :last-child {
  margin-bottom: 0;
}

#ahizlnbgau .gt_row {
  padding-top: 3px;
  padding-bottom: 3px;
  padding-left: 10px;
  padding-right: 10px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ahizlnbgau .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 10px;
  padding-right: 10px;
}

#ahizlnbgau .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#ahizlnbgau .gt_row_group_first td {
  border-top-width: 2px;
}

#ahizlnbgau .gt_row_group_first th {
  border-top-width: 2px;
}

#ahizlnbgau .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ahizlnbgau .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#ahizlnbgau .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#ahizlnbgau .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ahizlnbgau .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ahizlnbgau .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ahizlnbgau .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#ahizlnbgau .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ahizlnbgau .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ahizlnbgau .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ahizlnbgau .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ahizlnbgau .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ahizlnbgau .gt_sourcenote {
  font-size: 12px;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ahizlnbgau .gt_left {
  text-align: left;
}

#ahizlnbgau .gt_center {
  text-align: center;
}

#ahizlnbgau .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ahizlnbgau .gt_font_normal {
  font-weight: normal;
}

#ahizlnbgau .gt_font_bold {
  font-weight: bold;
}

#ahizlnbgau .gt_font_italic {
  font-style: italic;
}

#ahizlnbgau .gt_super {
  font-size: 65%;
}

#ahizlnbgau .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#ahizlnbgau .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#ahizlnbgau .gt_indent_1 {
  text-indent: 5px;
}

#ahizlnbgau .gt_indent_2 {
  text-indent: 10px;
}

#ahizlnbgau .gt_indent_3 {
  text-indent: 15px;
}

#ahizlnbgau .gt_indent_4 {
  text-indent: 20px;
}

#ahizlnbgau .gt_indent_5 {
  text-indent: 25px;
}

#ahizlnbgau .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#ahizlnbgau div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="gt_col_headings header">
<th id="repo" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: black" scope="col">Repo</th>
<th id="commits" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: black" scope="col">Commits</th>
<th id="language" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: black" scope="col">Top Language</th>
<th id="url" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: black" scope="col">url</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="repo">x</td>
<td class="gt_row gt_right" headers="commits">4628</td>
<td class="gt_row gt_left" headers="language">null</td>
<td class="gt_row gt_left" headers="url">github.com/x/x/x</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="repo">x</td>
<td class="gt_row gt_right" headers="commits">1748</td>
<td class="gt_row gt_left" headers="language">Python</td>
<td class="gt_row gt_left" headers="url">github.com/x/x/x</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="repo">x</td>
<td class="gt_row gt_right" headers="commits">1199</td>
<td class="gt_row gt_left" headers="language">R</td>
<td class="gt_row gt_left" headers="url">github.com/x/x/x</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="repo">x</td>
<td class="gt_row gt_right" headers="commits">1045</td>
<td class="gt_row gt_left" headers="language">HTML</td>
<td class="gt_row gt_left" headers="url">github.com/x/x/x</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="repo">x</td>
<td class="gt_row gt_right" headers="commits">1045</td>
<td class="gt_row gt_left" headers="language">Python</td>
<td class="gt_row gt_left" headers="url">github.com/x/x/x</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sticky-col">
<div class="sticky-col-stack">
<div id="cr-ploty" class="sticky">
<div class="cell">
<details class="code-fold hidden">
<summary>Code</summary>
<div class="sourceCode cell-code hidden" id="cb1" data-startfrom="158" data-source-offset="-1" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript" style="counter-reset: source-line 157;"><span id="cb1-158">node_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FileAttachment</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"repo_data_test.csv"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csv</span>()</span>
<span id="cb1-159"></span>
<span id="cb1-160"></span>
<span id="cb1-161">nodes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> node_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create</span>(d))</span>
<span id="cb1-162"></span>
<span id="cb1-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// bfScale = d3.scaleLinear()</span></span>
<span id="cb1-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//   .domain([1, 5])</span></span>
<span id="cb1-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//   .range([1930, 2020])</span></span>
<span id="cb1-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//   .clamp(true)</span></span>
<span id="cb1-167">    </span>
<span id="cb1-168">scan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> crTriggerIndex</span>
<span id="cb1-169"></span>
<span id="cb1-170">chart_param <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ({</span>
<span id="cb1-171">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-172">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-173">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb1-174">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">top</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-175">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">right</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-176">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bottom</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-177">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">left</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-178">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">center</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span></span>
<span id="cb1-179">  }</span>
<span id="cb1-180">})</span>
<span id="cb1-181"></span>
<span id="cb1-182">chart <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-183">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define base scales for positioning circles</span></span>
<span id="cb1-184">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scaleLinear</span>()</span>
<span id="cb1-185">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">domain</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb1-186">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>([chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-187"></span>
<span id="cb1-188">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scaleLinear</span>()</span>
<span id="cb1-189">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">domain</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb1-190">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>([chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bottom</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-191"></span>
<span id="cb1-192">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize SVG container</span></span>
<span id="cb1-193">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> svg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(DOM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">svg</span>(chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-194"></span>
<span id="cb1-195">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Append title and subtitle</span></span>
<span id="cb1-196">  svg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>)</span>
<span id="cb1-197">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-198">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)</span>
<span id="cb1-199">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-anchor"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"middle"</span>)</span>
<span id="cb1-200">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20px"</span>)</span>
<span id="cb1-201">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-weight"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>)</span>
<span id="cb1-202">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Beeswarm Plot of GitHub Repos Over Time"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-203"></span>
<span id="cb1-204">  svg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>)</span>
<span id="cb1-205">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-206">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-207">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-anchor"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"middle"</span>)</span>
<span id="cb1-208">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14px"</span>)</span>
<span id="cb1-209">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-weight"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span>)</span>
<span id="cb1-210">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A visualization of repositories in the DOH-EPI-Coders organization"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-211"></span>
<span id="cb1-212">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Preprocess data: Map any language that isn't "R" or "Python" to "Other"</span></span>
<span id="cb1-213">  node_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forEach</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb1-214">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jupyter Notebook"</span>) {</span>
<span id="cb1-215">      d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-216">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span>) {</span>
<span id="cb1-217">      d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Other"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-218">    }</span>
<span id="cb1-219">  })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-220"></span>
<span id="cb1-221">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Group nodes by language using d3.group</span></span>
<span id="cb1-222">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> languages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group</span>(node_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-223"></span>
<span id="cb1-224">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Viridis colors for languages</span></span>
<span id="cb1-225">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> colorScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scaleOrdinal</span>()</span>
<span id="cb1-226">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">domain</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Other"</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of languages you want to color</span></span>
<span id="cb1-227">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#440154"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3B528B"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#287D49"</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjusted Viridis colors with more green</span></span>
<span id="cb1-228"></span>
<span id="cb1-229">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale for node radius based on the number of commits</span></span>
<span id="cb1-230">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> radiusScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scaleLog</span>()</span>
<span id="cb1-231">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">domain</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the domain to your data range</span></span>
<span id="cb1-232">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the range for the circle radius</span></span>
<span id="cb1-233"></span>
<span id="cb1-234">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define x scale based on create_date for grouping by date</span></span>
<span id="cb1-235">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> xScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scaleTime</span>()</span>
<span id="cb1-236">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">domain</span>([<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-01-01"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2026-01-01"</span>)]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set date range</span></span>
<span id="cb1-237">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>([chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-238"></span>
<span id="cb1-239">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set up the y-scale based on language groups</span></span>
<span id="cb1-240">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> yScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scaleBand</span>()</span>
<span id="cb1-241">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">domain</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">from</span>(languages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keys</span>()))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Use the language groups as domain</span></span>
<span id="cb1-242">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>([chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bottom</span>])</span>
<span id="cb1-243">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">padding</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add padding for spacing between the groups</span></span>
<span id="cb1-244"></span>
<span id="cb1-245">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createNodes</span>(scan) {</span>
<span id="cb1-246">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort repos by commits in descending order and get the top 5 for scan == 3</span></span>
<span id="cb1-247">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> topRepos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> node_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>((a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-248">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> topRepoCommits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Set</span>(topRepos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-249"></span>
<span id="cb1-250">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize simulation with the base forces</span></span>
<span id="cb1-251">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> sim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3</span>
<span id="cb1-252">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forceSimulation</span>(node_data)</span>
<span id="cb1-253">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">force</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forceX</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xScale</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Date</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">create_date</span>))))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Position along the X-axis based on create_date</span></span>
<span id="cb1-254">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">force</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collide"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forceCollide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radius</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radiusScale</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strength</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Default collision force</span></span>
<span id="cb1-255"></span>
<span id="cb1-256">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If `scan &gt; 1`, apply additional forces for language grouping</span></span>
<span id="cb1-257">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (scan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb1-258">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply additional y-force to divide nodes by language</span></span>
<span id="cb1-259">      sim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">force</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forceY</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">yScale</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Position nodes along y-axis based on language</span></span>
<span id="cb1-260">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">force</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collide"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forceCollide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radius</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radiusScale</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strength</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust collision force</span></span>
<span id="cb1-261"></span>
<span id="cb1-262">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create x-axis for years</span></span>
<span id="cb1-263">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> xAxis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">axisBottom</span>(xScale)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tickFormat</span>(d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timeFormat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-264">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> xAxisGroup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> svg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"g"</span>)</span>
<span id="cb1-265">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transform"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`translate(0, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bottom</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">)`</span>)</span>
<span id="cb1-266">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">call</span>(xAxis)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-267">    </span>
<span id="cb1-268">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Style x-axis labels (make them bold and larger)</span></span>
<span id="cb1-269">        xAxisGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectAll</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>)</span>
<span id="cb1-270">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"16px"</span>)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set font size to 16px or any value you prefer</span></span>
<span id="cb1-271">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-weight"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make the labels bold</span></span>
<span id="cb1-272"></span>
<span id="cb1-273">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create y-axis for language groups</span></span>
<span id="cb1-274">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> yAxis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">axisLeft</span>(yScale)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-275">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> yAxisGroup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> svg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"g"</span>)</span>
<span id="cb1-276">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transform"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`translate(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">, 0)`</span>)</span>
<span id="cb1-277">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">call</span>(yAxis)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-278">        </span>
<span id="cb1-279">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Style y-axis labels (make them bold and larger)</span></span>
<span id="cb1-280">        yAxisGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectAll</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>)</span>
<span id="cb1-281">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15px"</span>)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set font size to 16px or any value you prefer</span></span>
<span id="cb1-282">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-weight"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make the labels bold</span></span>
<span id="cb1-283">      </span>
<span id="cb1-284">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb1-285">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For `scan === 1`, apply the default force with no language division</span></span>
<span id="cb1-286">      sim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">force</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forceY</span>(chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// All nodes at the center of Y-axis</span></span>
<span id="cb1-287">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">force</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collide"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forceCollide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radius</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radiusScale</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strength</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Default collision force</span></span>
<span id="cb1-288"></span>
<span id="cb1-289">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create x-axis for years</span></span>
<span id="cb1-290">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> xAxis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">axisBottom</span>(xScale)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tickFormat</span>(d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timeFormat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-291">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> xAxisGroup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> svg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"g"</span>)</span>
<span id="cb1-292">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transform"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`translate(0, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bottom</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">)`</span>)</span>
<span id="cb1-293">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">call</span>(xAxis)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-294">    </span>
<span id="cb1-295">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Style x-axis labels (make them bold and larger)</span></span>
<span id="cb1-296">    xAxisGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectAll</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>)</span>
<span id="cb1-297">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"16px"</span>)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set font size to 16px or any value you prefer</span></span>
<span id="cb1-298">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-weight"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make the labels bold</span></span>
<span id="cb1-299"></span>
<span id="cb1-300">    }</span>
<span id="cb1-301"></span>
<span id="cb1-302">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Restart the simulation to apply the changes</span></span>
<span id="cb1-303">    sim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-304">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alphaDecay</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)</span>
<span id="cb1-305">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restart</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-306"></span>
<span id="cb1-307">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Bind data and draw nodes</span></span>
<span id="cb1-308">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> node <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> svg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectAll</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".node"</span>)</span>
<span id="cb1-309">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(node_data)</span>
<span id="cb1-310">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enter</span>()</span>
<span id="cb1-311">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"circle"</span>)</span>
<span id="cb1-312">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node"</span>)</span>
<span id="cb1-313">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radiusScale</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the radius based on the 'commits' field</span></span>
<span id="cb1-314">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cx"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xScale</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Date</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">create_date</span>)))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set initial x position based on date</span></span>
<span id="cb1-315">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cy"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> scan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">yScale</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> chart_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Correct y position based on language</span></span>
<span id="cb1-316">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fill"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (d) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> topRepoCommits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">has</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorScale</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Highlight top 5 repos with orange</span></span>
<span id="cb1-317">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"opacity"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (d) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> topRepoCommits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">has</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Lower opacity for non-top 5 repos</span></span>
<span id="cb1-318"></span>
<span id="cb1-319">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add tooltips with repo info</span></span>
<span id="cb1-320">    node<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>)</span>
<span id="cb1-321">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span></span>
<span id="cb1-322">        <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Repo: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repo</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}\n</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-323">        <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Commits: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}\n</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-324">        <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Contributors: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contributors</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}\n</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-325">        <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Create Date: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">create_date</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span></span>
<span id="cb1-326">      )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-327"></span>
<span id="cb1-328">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Hover effect to change circle color to red on mouseover, revert on mouseout</span></span>
<span id="cb1-329">    node<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouseover"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">event</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d) {</span>
<span id="cb1-330">    d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span>)</span>
<span id="cb1-331">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fill"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Change the fill color to red on mouseover</span></span>
<span id="cb1-332">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stroke"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add black border</span></span>
<span id="cb1-333">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stroke-width"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the border width</span></span>
<span id="cb1-334">  })</span>
<span id="cb1-335">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mouseout"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">event</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d) {</span>
<span id="cb1-336">    d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span>)</span>
<span id="cb1-337">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fill"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (d) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> topRepoCommits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">has</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorScale</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Reset the fill color</span></span>
<span id="cb1-338">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stroke"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove the border on mouse out</span></span>
<span id="cb1-339">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stroke-width"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Reset the border width</span></span>
<span id="cb1-340">  })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-341"></span>
<span id="cb1-342">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Show detailed data on click with line breaks</span></span>
<span id="cb1-343">    node<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"click"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">event</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d) {</span>
<span id="cb1-344">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> clickTooltip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"body"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"div"</span>)</span>
<span id="cb1-345">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"click-tooltip"</span>)</span>
<span id="cb1-346">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"position"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"absolute"</span>)</span>
<span id="cb1-347">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"visibility"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hidden"</span>)</span>
<span id="cb1-348">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"background"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(0, 0, 0, 0.7)"</span>)</span>
<span id="cb1-349">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>)</span>
<span id="cb1-350">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"border-radius"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4px"</span>)</span>
<span id="cb1-351">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"padding"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10px"</span>)</span>
<span id="cb1-352">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font-size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14px"</span>)</span>
<span id="cb1-353">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span></span>
<span id="cb1-354"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">          &lt;strong&gt;Repo:&lt;/strong&gt; </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repo</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;br&gt;</span></span>
<span id="cb1-355"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">          &lt;strong&gt;Commits:&lt;/strong&gt; </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">commits</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;br&gt;</span></span>
<span id="cb1-356"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">          &lt;strong&gt;Contributors:&lt;/strong&gt; </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contributors</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;br&gt;</span></span>
<span id="cb1-357"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">          &lt;strong&gt;Create Date:&lt;/strong&gt; </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">create_date</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-358"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        `</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-359"></span>
<span id="cb1-360">      clickTooltip<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"visibility"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"visible"</span>)</span>
<span id="cb1-361">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">event</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pageY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">px`</span>)</span>
<span id="cb1-362">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">event</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pageX</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">px`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-363"></span>
<span id="cb1-364">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Close the click tooltip after 3 seconds (optional)</span></span>
<span id="cb1-365">      <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb1-366">        d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".click-tooltip"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remove</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-367">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-368">    })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-369"></span>
<span id="cb1-370">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update circle positions on each tick of the simulation</span></span>
<span id="cb1-371">    sim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tick"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb1-372">      node</span>
<span id="cb1-373">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cx"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span>)</span>
<span id="cb1-374">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cy"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-375">    })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-376">  }</span>
<span id="cb1-377"></span>
<span id="cb1-378">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Main logic to check `scan` value and call createNodes accordingly</span></span>
<span id="cb1-379">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createNodes</span>(scan)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pass `scan` to createNodes to handle the different plot configurations</span></span>
<span id="cb1-380"></span>
<span id="cb1-381">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> svg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">node</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-382">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-1-1" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-1-2" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-1-3" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-1-4" data-nodetype="declaration">

</div>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<div id="ojs-cell-1-5" data-nodetype="declaration">

</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p><br> <br></p>
<section id="how-it-works" class="level2">
<h2 class="anchored" data-anchor-id="how-it-works">How it works</h2>
<p>The <a href="https://closeread.dev/gallery/demos/ojs-variables/">closeread docs for ojs are great</a> - I highly recommend reading through that document.</p>
<p>They use <code>crProgressBlock</code> as a variable to indicate how far along the page a user has scrolled.</p>
<p>They then take that variable and apply some basic math to it. For example, when the user starts scrolling at 0%, they set the variable <code>angle1</code> to be <code>-180</code>. And <code>angle1</code> will change as the user scrolls down until it gets to angle = <code>0</code>. Like this:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb2-1">angleScale1 = d3.scaleLinear()</span>
<span id="cb2-2">  .domain(<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">0, 1</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>)</span>
<span id="cb2-3">  .range(<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-180, 0</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>)</span>
<span id="cb2-4">  .clamp(true)</span>
<span id="cb2-5">    </span>
<span id="cb2-6">angle1 = angleScale1(crProgressBlock)</span></code></pre></div>
</section>
<section id="what-you-need-to-do---user-scroll-locations" class="level2">
<h2 class="anchored" data-anchor-id="what-you-need-to-do---user-scroll-locations">What you need to do - user scroll locations</h2>
<ol type="1">
<li>put this chunk in your quarto document and run <code>quarto preview</code>. Note that the last variable is a variable you can derive</li>
</ol>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:{.counter style="position</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> fixed; top: 10px; right: 10px; background-color: skyblue; border-radius: 5px; padding: 18px 18px 0 18px; line-height: .8em;"}</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">```{ojs}</span></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">md`Active sticky</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${crActiveSticky}`</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">md`Active trigger</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${crTriggerIndex}`</span></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">md`Trigger progress</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${(crTriggerProgress * 100).toFixed(1)}%`</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">md`Scroll direction</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${crDirection}`</span></span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">md`Progress Block progress</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${(crProgressBlock * 100).toFixed(1)}%`</span></span>
<span id="cb3-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">md`-----`</span></span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">md`(derived) derived var1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${bf1.toFixed(1)}°`</span></span>
<span id="cb3-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb3-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span></code></pre></div>
<ol start="2" type="1">
<li><p>scroll on the script and the blue tab on the upper right will tell you what those variables equal when the user scrolls through the site</p></li>
<li><p>now you can see how variables change</p></li>
<li><p>assign that variable to something in ojs, such as <code>scan = crTriggerIndex</code></p></li>
</ol>
</section>
<section id="what-you-need-to-do---learn-some-d3" class="level2">
<h2 class="anchored" data-anchor-id="what-you-need-to-do---learn-some-d3">What you need to do - learn some D3</h2>
<p>Now you have <code>scan = crTriggerIndex</code>, a variable in ojs that gets updated when a user scrolls. We can use this variable in our plot.</p>
<ol type="1">
<li><p>I used <a href="https://d3js.org/">D3.js</a> to make the beeswarm plot</p></li>
<li><p>use <a href="https://observablehq.com/">Observable</a> to design the plot (and chatGPT to guide you with the code)</p></li>
<li><p>for a D3.js introduction, you <strong>NEED</strong> to <a href="https://observablehq.com/@ben-tanen/a-tutorial-to-using-d3-force-from-someone-who-just-learned-ho">read this document</a></p>
<ul>
<li>especially this part: it shows how D3 visuals are broken down into parts</li>
</ul></li>
</ol>
<blockquote class="blockquote">
<p>Structure of d3-force simulations Before we dive into the specific forces that we’ll use, let’s briefly discuss the general structure used to create a force-directed graph.</p>
</blockquote>
<blockquote class="blockquote">
<p>// 1. create a copy of the node data <code>nodes = node_data.map(d =\&gt; Object.create(d))</code></p>
<p>// 2. create new force simulation specifying the forces to use // and, in our case, how many “ticks” or frames we’ll want to simulate</p>
</blockquote>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb4-1">sim = d3.forceSimulation(nodes) .force("force_name", ...) // ... chain together as many forces as we want .stop() .tick(n_frames_to_simulate)</span></code></pre></div>
<blockquote class="blockquote">
<p>// 3. bind data and draw nodes <code>node = svg.selectAll(".node") .data(nodes).enter() // ... specify node position, radius, etc. as we normally would</code></p>
<p>// 4. indicate how we should update the graph for each tick</p>
</blockquote>
<blockquote class="blockquote">
<p><code>sim.on("tick", () =\&gt; { // ... specify how we should move nodes/edges given new positional data })</code></p>
</blockquote>
<blockquote class="blockquote">
<p><strong>Step one</strong> is to create a copy of our initial node data (position, radius, etc.) so that we can pass this copy rather than our original data to <code>d3.forceSimulation()</code>. This is because as we simulate forces, the <code>d3.forceSimulation()</code> function will update whatever array of data we pass it to reflect how forces are influencing our nodes so if we have any intention of re-using our initial node data after we start simulating, we’ll want to copy it first. However, if you are only doing one simulation and do not need preserve the initial data, you don’t necessarily need to worry about copying your data.</p>
<p><strong>Step two</strong> is to actually make our simulation by first passing our (copied) array of data to <code>d3.forceSimulation()</code>. We can then add/chain whatever forces we would like to use with <code>force(...)</code> (more on this below). In our case, once we have defined the behavior of the simulation, we will then explictly stop the simulation before it has a chance to start so that we can specify how many frames or ticks we would like to run of our simulation. We do this below so that we can control where we are in the simulation with scrubbers, but without doing this, the simulation will simply start and continue to run on it’s own.</p>
<p><strong>Step three</strong> is to simply bind our data and draw our nodes as we would for any static graph. Because we are binding our nodes to the same data that is passed to <code>d3.forceSimulation()</code>, as our simulation runs, we can simply rely on the next and final step to update our nodes with new positioning.</p>
<p><strong>Step four</strong> is to end by indicating how we should update our nodes at each step as the simulation applies forces. The simulation will be updating the underlying positional data array (<code>nodes</code>) that is already bound to our drawn elements so we just have specify moving each node to its new position.</p>
</blockquote>
</section>
<section id="what-you-need-to-do---put-it-together" class="level2">
<h2 class="anchored" data-anchor-id="what-you-need-to-do---put-it-together">What you need to do - put it together</h2>
<p>I went back and forth with chatGPT <em>a lot</em>, and I read a lot of documentation to make the visual. But it was worth it. I feel like I have a better understanding of D3.</p>
<ol type="1">
<li>For my beeswarm plot, I make a base plot that has minimal D3 forces applied to it, it looks like this:</li>
</ol>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb5-1">// Initialize simulation with the base forces</span>
<span id="cb5-2">    const sim = d3</span>
<span id="cb5-3">      .forceSimulation(node_data)</span>
<span id="cb5-4">      .force("x", d3.forceX(d =&gt; xScale(new Date(d.create_date))))  // Position along the X-axis based on create_date</span>
<span id="cb5-5">      .force("collide", d3.forceCollide().radius(d =&gt; radiusScale(d.commits) + 1).strength(0.5));  // Default collision force</span></code></pre></div>
<ol start="2" type="1">
<li>Then I used the <code>scan</code> variable I created above that is linked to closeread’s scroll trigger to dynamically add new D3 forces to the plot:</li>
</ol>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb6-1">// If <span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">`scan &gt; 1`</span>, apply additional forces for language grouping</span>
<span id="cb6-2">if (scan &gt; 1) {</span>
<span id="cb6-3">  // Apply additional y-force to divide nodes by language</span>
<span id="cb6-4">  sim.force("y", d3.forceY(d =&gt; yScale(d.language) + 70))  // Position nodes along y-axis based on language</span>
<span id="cb6-5">    .force("collide", d3.forceCollide().radius(d =&gt; radiusScale(d.commits) + 1).strength(0.8));  // Adjust collision force</span>
<span id="cb6-6"></span>
<span id="cb6-7">  // Create x-axis for years</span>
<span id="cb6-8">  const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat("%Y"));</span>
<span id="cb6-9">  const xAxisGroup = svg.append("g")</span>
<span id="cb6-10">  .attr("transform", <span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">`translate(0, ${chart_param.height - chart_param.margin.bottom})`</span>)</span>
<span id="cb6-11">  .call(xAxis);</span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    // Style x-axis labels (make them bold and larger)</span></span>
<span id="cb6-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    xAxisGroup.selectAll("text")</span></span>
<span id="cb6-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    .attr("font-size", "16px")    // Set font size to 16px or any value you prefer</span></span>
<span id="cb6-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    .attr("font-weight", "bold"); // Make the labels bold</span></span>
<span id="cb6-17"></span>
<span id="cb6-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    // Create y-axis for language groups</span></span>
<span id="cb6-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    const yAxis = d3.axisLeft(yScale);</span></span>
<span id="cb6-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    const yAxisGroup = svg.append("g")</span></span>
<span id="cb6-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    .attr("transform", `translate(${chart_param.margin.left}, 0)`)</span></span>
<span id="cb6-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    .call(yAxis);</span></span>
<span id="cb6-23"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb6-24"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    // Style y-axis labels (make them bold and larger)</span></span>
<span id="cb6-25"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    yAxisGroup.selectAll("text")</span></span>
<span id="cb6-26"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    .attr("font-size", "15px")    // Set font size to 16px or any value you prefer</span></span>
<span id="cb6-27"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    .attr("font-weight", "bold"); // Make the labels bold</span></span>
<span id="cb6-28">  </span>
<span id="cb6-29">} else {</span>
<span id="cb6-30">  // For <span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">`scan === 1`</span>, apply the default force with no language division</span>
<span id="cb6-31">  sim.force("y", d3.forceY(chart_param.height / 2))  // All nodes at the center of Y-axis</span>
<span id="cb6-32">    .force("collide", d3.forceCollide().radius(d =&gt; radiusScale(d.commits) + 1).strength(0.5));  // Default collision force</span>
<span id="cb6-33"></span>
<span id="cb6-34">  // Create x-axis for years</span>
<span id="cb6-35">  const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat("%Y"));</span>
<span id="cb6-36">  const xAxisGroup = svg.append("g")</span>
<span id="cb6-37">  .attr("transform", <span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">`translate(0, ${chart_param.height - chart_param.margin.bottom})`</span>)</span>
<span id="cb6-38">  .call(xAxis);</span>
<span id="cb6-39"></span>
<span id="cb6-40">// Style x-axis labels (make them bold and larger)</span>
<span id="cb6-41">xAxisGroup.selectAll("text")</span>
<span id="cb6-42">  .attr("font-size", "16px")    // Set font size to 16px or any value you prefer</span>
<span id="cb6-43">  .attr("font-weight", "bold"); // Make the labels bold</span>
<span id="cb6-44"></span>
<span id="cb6-45">}</span></code></pre></div>
<ol start="3" type="1">
<li>You can see a conditional statement: when <code>scan &gt;1</code> then the plot will get split into a plot by the <code>language</code> variable, and a new y axis will be added to the plot. Else, when <code>scan === 1</code> then the plot has a base force with the regular x axis only</li>
</ol>


</section>

 ]]></description>
  <guid>https://github.com/edenian-prince/blog/posts/2025-01-13-scrollyd3/</guid>
  <pubDate>Mon, 20 Oct 2025 22:27:44 GMT</pubDate>
  <media:content url="https://github.com/edenian-prince/blog/posts/2025-01-13-scrollyd3/images/jspic.png" medium="image" type="image/png" height="43" width="144"/>
</item>
</channel>
</rss>
